[{"/home/alihz/Desktop/react/react-courser/src/index.js":"1","/home/alihz/Desktop/react/react-courser/src/App.js":"2","/home/alihz/Desktop/react/react-courser/src/reportWebVitals.js":"3","/home/alihz/Desktop/react/react-courser/src/components/layout/MainLayout.js":"4","/home/alihz/Desktop/react/react-courser/src/components/shared/dishes.js":"5","/home/alihz/Desktop/react/react-courser/src/components/menu/Menu.js":"6","/home/alihz/Desktop/react/react-courser/src/components/menu/dishDetails.js":"7","/home/alihz/Desktop/react/react-courser/src/components/home/HomeComponent.js":"8","/home/alihz/Desktop/react/react-courser/src/components/contact/ContactComponent.js":"9","/home/alihz/Desktop/react/react-courser/src/components/ebout/AboutComponent.js":"10","/home/alihz/Desktop/react/react-courser/src/components/header/HeaderComponent.js":"11","/home/alihz/Desktop/react/react-courser/src/components/shared/promotions.js":"12","/home/alihz/Desktop/react/react-courser/src/components/shared/comments.js":"13","/home/alihz/Desktop/react/react-courser/src/components/shared/leaders.js":"14","/home/alihz/Desktop/react/react-courser/src/components/footer/FooterComponent.js":"15","/home/alihz/Desktop/react/react-courser/src/redux/configureStore.js":"16","/home/alihz/Desktop/react/react-courser/src/redux/dishes.js":"17","/home/alihz/Desktop/react/react-courser/src/redux/comments.js":"18","/home/alihz/Desktop/react/react-courser/src/redux/promotions.js":"19","/home/alihz/Desktop/react/react-courser/src/redux/leaders.js":"20","/home/alihz/Desktop/react/react-courser/src/redux/ActionCreators.js":"21","/home/alihz/Desktop/react/react-courser/src/redux/ActionTypes.js":"22","/home/alihz/Desktop/react/react-courser/src/components/Loading/LoadingComponent.js":"23","/home/alihz/Desktop/react/react-courser/src/redux/forms.js":"24","/home/alihz/Desktop/react/react-courser/src/components/shared/baseURL.js":"25"},{"size":330,"mtime":1609619374482,"results":"26","hashOfConfig":"27"},{"size":473,"mtime":1609162018303,"results":"28","hashOfConfig":"27"},{"size":362,"mtime":1607104500923,"results":"29","hashOfConfig":"27"},{"size":4022,"mtime":1609835925105,"results":"30","hashOfConfig":"27"},{"size":1633,"mtime":1608723192316,"results":"31","hashOfConfig":"27"},{"size":2826,"mtime":1609768437938,"results":"32","hashOfConfig":"27"},{"size":7949,"mtime":1609771133761,"results":"33","hashOfConfig":"27"},{"size":1672,"mtime":1609760532016,"results":"34","hashOfConfig":"27"},{"size":9173,"mtime":1609671752916,"results":"35","hashOfConfig":"27"},{"size":4095,"mtime":1609764469618,"results":"36","hashOfConfig":"27"},{"size":5488,"mtime":1609759964823,"results":"37","hashOfConfig":"27"},{"size":562,"mtime":1609248435539,"results":"38","hashOfConfig":"27"},{"size":4106,"mtime":1609245270653,"results":"39","hashOfConfig":"27"},{"size":2211,"mtime":1609760749165,"results":"40","hashOfConfig":"27"},{"size":3417,"mtime":1609249999207,"results":"41","hashOfConfig":"27"},{"size":711,"mtime":1609671279516,"results":"42","hashOfConfig":"27"},{"size":583,"mtime":1609662850205,"results":"43","hashOfConfig":"27"},{"size":526,"mtime":1609770936136,"results":"44","hashOfConfig":"27"},{"size":599,"mtime":1609756527784,"results":"45","hashOfConfig":"27"},{"size":590,"mtime":1609762870870,"results":"46","hashOfConfig":"27"},{"size":4533,"mtime":1609770064074,"results":"47","hashOfConfig":"27"},{"size":543,"mtime":1609762346541,"results":"48","hashOfConfig":"27"},{"size":247,"mtime":1609664262017,"results":"49","hashOfConfig":"27"},{"size":162,"mtime":1609671177208,"results":"50","hashOfConfig":"27"},{"size":48,"mtime":1609759297216,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"17c050a",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"54"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"54"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"/home/alihz/Desktop/react/react-courser/src/index.js",[],["107","108"],"/home/alihz/Desktop/react/react-courser/src/App.js",[],"/home/alihz/Desktop/react/react-courser/src/reportWebVitals.js",[],"/home/alihz/Desktop/react/react-courser/src/components/layout/MainLayout.js",[],"/home/alihz/Desktop/react/react-courser/src/components/shared/dishes.js",[],["109","110"],"/home/alihz/Desktop/react/react-courser/src/components/menu/Menu.js",[],"/home/alihz/Desktop/react/react-courser/src/components/menu/dishDetails.js",["111","112","113"],"import React, { Component } from \"react\";\nimport {\n  Card,\n  CardImg,\n  CardText,\n  CardBody,\n  CardTitle,\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  Label,\n  Row,\n  Col,\n  Breadcrumb,\n  BreadcrumbItem,\n} from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport { Control, LocalForm, Errors } from \"react-redux-form\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEdit } from \"@fortawesome/free-solid-svg-icons\";\nimport { Loading } from \"../Loading/LoadingComponent\";\nimport { baseUrl } from \"../shared/baseURL\";\n\nconst cardBody = {\n  borderRadius: \"10px\",\n  border: \"1px solid gray\",\n  backgroundColor: \"#D9AFD9\",\n  backgroundImage: \"linear-gradient(130deg, #D9AFD9 0%, #97D9E1 84%)\",\n  margin: \"5px\",\n};\nconst CommentStyle = {\n  maxHeight: \"360px\",\n  overflowY: \"scroll\",\n};\nconst title = {\n  fontSize: \"large\",\n  fontWeight: \"bold\",\n};\nconst CommentFormStyle = {\n  margin: \"10px\",\n  pading: \"2px\",\n  textAlign: \"center\",\n};\nconst price = {\n  color: \"rgb(5, 133, 238)\",\n  fontWeight: \"bold\",\n  fontSize: \"medium\",\n  borderRadius: \"10px\",\n  display: \"inline\",\n};\nconst category = {\n  fontWeight: \"bold\",\n  color: \"darksalmon\",\n};\nconst img = {\n  padding: \"5px\",\n};\nconst description = {\n  textAlign: \"justify\",\n  textJustify: \"inter-word\",\n};\nconst span = <span style={{ margin: \"0px 120px\" }}> </span>;\nfunction RenderComments({ comments,postComment, dishId }) {\n  if (comments != null) {\n    const val = comments.map((comment) => {\n      return (\n        <CardBody style={cardBody} key={comment.id}>\n          <CardText>\n            {comment.comment}\n            <br />\n            --{comment.author} ,{\" \"}\n            {new Intl.DateTimeFormat(\"en-US\", {\n              year: \"numeric\",\n              month: \"short\",\n              day: \"2-digit\",\n            }).format(new Date(Date.parse(comment.date)))}\n          </CardText>\n        </CardBody>\n      );\n    });\n    return (\n      <div className=\"col-12 col-md-5 m-1\">\n        <h5>Comments</h5>\n        <div style={CommentStyle}>{val}</div>\n        <div style={CommentFormStyle}>\n          <CommentForm dishId={dishId} postComment={postComment} />\n        </div>\n      </div>\n    );\n  } else return <div></div>;\n}\nfunction RenderDish({ dish }) {\n  if (dish != null) {\n    return (\n      <div className=\"col-12 col-md-5 m-1\">\n        <Card>\n          <CardImg top src={baseUrl + dish.image} alt={dish.name} style={img} />\n          <CardBody>\n            <CardTitle style={title}>{dish.name}</CardTitle>\n            <CardText style={category}>\n              {\" \"}\n              Category : {dish.category.toUpperCase()}\n            </CardText>\n            <CardText style={description}>{dish.description}</CardText>\n            <CardText style={price}>\n              {dish.label}\n              {span}\n              {dish.price} $\n            </CardText>\n          </CardBody>\n        </Card>\n      </div>\n    );\n  } else return <div></div>;\n}\nconst DishDetail = (props) => {\n  if (props.isLoading) {\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <Loading />\n        </div>\n      </div>\n    );\n  } else if (props.errMess) {\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <h4>{props.errMess}</h4>\n        </div>\n      </div>\n    );\n  } else if (props.dish != null) {\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <Breadcrumb>\n            <BreadcrumbItem>\n              {\" \"}\n              <Link to=\"home\">Home</Link>{\" \"}\n            </BreadcrumbItem>\n            <BreadcrumbItem active>Menu</BreadcrumbItem>\n          </Breadcrumb>\n          <div className=\"col-12\">\n            <h3>{props.dish.name}</h3>\n            <hr />\n          </div>\n        </div>\n        <div className=\"row\">\n          <RenderDish dish={props.dish} />\n          <RenderComments\n            comments={props.comments}\n            postComment={props.postComment}\n            dishId={props.dish.id}\n          />\n        </div>\n      </div>\n    );\n  } else {\n    return <div></div>;\n  }\n};\nconst required = (val) => val && val.length;\nconst maxLength = (len) => (val) => !val || val.length < len;\nconst minLength = (len) => (val) => val && val.length >= len;\n\nclass CommentForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isModelOpen: false,\n    };\n\n    this.toggleModal = this.toggleModal.bind(this);\n    this.handleSubmit = this.hadnleSubmit.bind(this);\n  }\n\n  toggleModal() {\n    this.setState({\n      isModelOpen: !this.state.isModelOpen,\n    });\n  }\n\n  hadnleSubmit(values) {\n    this.props.postComment(\n      this.props.dishId,\n      values.rating,\n      values.author,\n      values.comment\n    );\n  }\n\n  render() {\n    const edit = <FontAwesomeIcon icon={faEdit} />;\n    return (\n      <div>\n        <Button outline onClick={this.toggleModal}>\n          {edit} Submit Comment\n        </Button>\n\n        <Modal isOpen={this.state.isModelOpen} toggle={this.toggleModal}>\n          <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\n          <ModalBody>\n            <LocalForm onSubmit={(values) => this.hadnleSubmit(values)}>\n              <Row className=\"form-group\">\n                <Label for=\"rating\" md={12}>\n                  rating\n                </Label>\n                <Col md={12}>\n                  <Control.select\n                    model=\".rating\"\n                    name=\"rating\"\n                    className=\"form-control\"\n                  >\n                    <option>1</option>\n                    <option>2</option>\n                    <option>3</option>\n                    <option>4</option>\n                    <option>5</option>\n                  </Control.select>\n                </Col>\n              </Row>\n              <Row className=\"form-group\">\n                <Label htmlFor=\"author\" md={12}>\n                  Your Name\n                </Label>\n                <Col md={12}>\n                  <Control.text\n                    model=\".author\"\n                    id=\"author\"\n                    name=\"author\"\n                    placeholder=\"Author\"\n                    className=\"form-control\"\n                    validators={{\n                      required,\n                      minLength: minLength(3),\n                      maxLength: maxLength(15),\n                    }}\n                  />\n                  <Errors\n                    className=\"text-danger\"\n                    model=\".author\"\n                    show=\"touched\"\n                    messages={{\n                      required: \"Required\",\n                      minLength: \"Should have more than 3 Characters!\",\n                      maxLength: \"Should have 15 or less Characters!\",\n                    }}\n                  />\n                </Col>\n              </Row>\n              <Row className=\"form-group\">\n                <Label htmlFor=\"feedback\" md={12}>\n                  Your feedback\n                </Label>\n                <Col sm={12}>\n                  <Control.textarea\n                    model=\".comment\"\n                    id=\"comment\"\n                    name=\"comment\"\n                    resize=\"none\"\n                    rows=\"12\"\n                    className=\"form-control\"\n                    validators={{\n                      required,\n                    }}\n                  />\n                  <Errors\n                    className=\"text-danger\"\n                    model=\".newComment\"\n                    show=\"touched\"\n                    messages={{\n                      required: \"Please write your massege!\",\n                    }}\n                  />\n                </Col>\n              </Row>\n              <Button type=\"submit\" value=\"submit\" color=\"primary\">\n                Submit\n              </Button>\n            </LocalForm>\n          </ModalBody>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default DishDetail;\n","/home/alihz/Desktop/react/react-courser/src/components/home/HomeComponent.js",[],"/home/alihz/Desktop/react/react-courser/src/components/contact/ContactComponent.js",["114","115","116","117","118","119","120","121"],"import React, { Component } from \"react\";\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  Button,\n  Row,\n  Col,\n  Label,\n} from \"reactstrap\";\nimport { Control, Form, Errors, actions } from \"react-redux-form\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPhone, faEnvelope, faFax } from \"@fortawesome/free-solid-svg-icons\";\nimport { faSkype } from \"@fortawesome/free-brands-svg-icons\";\n\nconst required = (val) => val && val.length;\nconst maxLength = (len) => (val) => !val || val.length <= len;\nconst minLength = (len) => (val) => val && val.length >= len;\nconst isNumber = (val) => !isNaN(Number(val));\nconst validEmail = (val) =>\n  /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\nclass Contact extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit(val) {\n    alert(\"Current State is: \" + JSON.stringify(val));\n    this.props.resetFeedbackForm();\n  }\n\n  render() {\n    const phone = <FontAwesomeIcon icon={faPhone} />;\n    const skype = <FontAwesomeIcon icon={faSkype} />;\n    const fax = <FontAwesomeIcon icon={faFax} />;\n    const enve = <FontAwesomeIcon icon={faEnvelope} />;\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to=\"/home\">Home</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>Contact Us</BreadcrumbItem>\n          </Breadcrumb>\n          <div className=\"col-12\">\n            <h3>Contact Us</h3>\n            <hr />\n          </div>\n        </div>\n        <div className=\"row row-content\">\n          <div className=\"row row-content\">\n            <div className=\"col-12\">\n              <h3>Location Information</h3>\n            </div>\n            <div className=\"col-12 col-sm-4 offset-sm-1\">\n              <h5>Our Address</h5>\n              <address>\n                121, Clear Water Bay Road\n                <br />\n                Clear Water Bay, Kowloon\n                <br />\n                HONG KONG\n                <br />\n                {phone} : +852 1234 5678\n                <br />\n                {fax} : +852 8765 4321\n                <br />\n                {enve} :{\" \"}\n                <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\n              </address>\n            </div>\n            <div className=\"col-12 col-sm-6 offset-sm-1\">\n              <h5>Map of our Location</h5>\n            </div>\n            <div className=\"col-12 col-sm-11 offset-sm-1\">\n              <div className=\"btn-group\" role=\"group\">\n                <a role=\"button\" className=\"btn btn-primary\" href=\"/\">\n                  {phone} Call\n                </a>\n                <a role=\"button\" className=\"btn btn-info\" href=\"/\">\n                  {skype} Skype\n                </a>\n                <a role=\"button\" className=\"btn btn-success\" href=\"/\">\n                  {enve} Email\n                </a>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"col-12\">\n          <h3>Send us your Feedback</h3>\n        </div>\n        <div className=\"col-12 col-md-9\">\n          <Form model=\"feedback\" onSubmit={(values) => this.handleSubmit(values)}>\n            <Row className=\"form-group\">\n              <Label htmlFor=\"firstname\" md={2}>\n                First Name\n              </Label>\n              <Col md={10}>\n                <Control.text\n                  model=\".firstname\"\n                  id=\"firstname\"\n                  name=\"firstname\"\n                  placeholder=\"First Name\"\n                  className=\"form-control\"\n                  validators={{\n                    required,\n                    minLength: minLength(3),\n                    maxLength: maxLength(15),\n                  }}\n                />\n                <Errors\n                  className=\"text-danger\"\n                  model=\".firstname\"\n                  show=\"touched\"\n                  messages={{\n                    required: \"Required\",\n                    minLength: \"Must be greater than 2 characters\",\n                    maxLength: \"Must be 15 characters or less\",\n                  }}\n                />\n              </Col>\n            </Row>\n            <Row className=\"form-group\">\n              <Label htmlFor=\"lastname\" md={2}>\n                Last Name\n              </Label>\n              <Col md={10}>\n                <Control.text\n                  model=\".lastname\"\n                  id=\"lastname\"\n                  name=\"lastname\"\n                  placeholder=\"Last Name\"\n                  className=\"form-control\"\n                  validators={{\n                    required,\n                    minLength: minLength(3),\n                    maxLength: maxLength(15),\n                  }}\n                />\n                <Errors\n                  className=\"text-danger\"\n                  model=\".lastname\"\n                  show=\"touched\"\n                  messages={{\n                    required: \"Required\",\n                    minLength: \"Must be greater than 2 characters\",\n                    maxLength: \"Must be 15 characters or less\",\n                  }}\n                />\n              </Col>\n            </Row>\n            <Row className=\"form-group\">\n              <Label htmlFor=\"telnum\" md={2}>\n                Contact Tel.\n              </Label>\n              <Col md={10}>\n                <Control.text\n                  model=\".telnum\"\n                  id=\"telnum\"\n                  name=\"telnum\"\n                  placeholder=\"Tel. Number\"\n                  className=\"form-control\"\n                  validators={{\n                    required,\n                    minLength: minLength(3),\n                    maxLength: maxLength(15),\n                    isNumber,\n                  }}\n                />\n                <Errors\n                  className=\"text-danger\"\n                  model=\".telnum\"\n                  show=\"touched\"\n                  messages={{\n                    required: \"Required\",\n                    minLength: \"Must be greater than 2 numbers\",\n                    maxLength: \"Must be 15 numbers or less\",\n                    isNumber: \"Must be a number\",\n                  }}\n                />\n              </Col>\n            </Row>\n            <Row className=\"form-group\">\n              <Label htmlFor=\"email\" md={2}>\n                Email\n              </Label>\n              <Col md={10}>\n                <Control.text\n                  type=\"email\"\n                  model=\".email\"\n                  id=\"email\"\n                  name=\"email\"\n                  placeholder=\"Email\"\n                  className=\"form-control\"\n                  validators={{\n                    required,\n                    validEmail,\n                  }}\n                />\n                <Errors\n                  className=\"text-danger\"\n                  model=\".email\"\n                  show=\"touched\"\n                  messages={{\n                    required: \"Required\",\n                    validEmail: \"Invalid Email Address\",\n                  }}\n                />\n              </Col>\n            </Row>\n            <Row className=\"form-group\">\n              <Col md={{ size: 6, offset: 2 }}>\n                <div className=\"form-check\">\n                  <Label check>\n                    <Control.checkbox\n                      model=\".agree\"\n                      name=\"agree\"\n                      className=\"form-check-input\"\n                    />{\" \"}\n                    <strong>May we contact you?</strong>\n                  </Label>\n                </div>\n              </Col>\n              <Col md={{ size: 3, offset: 1 }}>\n                <Control.select\n                  model=\".contactType\"\n                  name=\"contactType\"\n                  className=\"form-control\"\n                >\n                  <option>Tel.</option>\n                  <option>Email</option>\n                </Control.select>\n              </Col>\n            </Row>\n            <Row className=\"form-group\">\n              <Label htmlFor=\"message\" md={2}>\n                Your Feedback\n              </Label>\n              <Col md={10}>\n                <Control.textarea\n                  model=\".message\"\n                  id=\"message\"\n                  name=\"message\"\n                  rows=\"12\"\n                  className=\"form-control\"\n                  validators={{\n                    required,\n                  }}\n                />\n                <Errors\n                  className=\"text-danger\"\n                  model=\".message\"\n                  show=\"touched\"\n                  messages={{\n                    required: \"Please write massege !\",\n                  }}\n                />\n              </Col>\n            </Row>\n            <Row className=\"form-group\">\n              <Col md={{ size: 10, offset: 2 }}>\n                <Button type=\"submit\" color=\"primary\">\n                  Send Feedback\n                </Button>\n              </Col>\n            </Row>\n          </Form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Contact;\n","/home/alihz/Desktop/react/react-courser/src/components/ebout/AboutComponent.js",[],"/home/alihz/Desktop/react/react-courser/src/components/header/HeaderComponent.js",[],"/home/alihz/Desktop/react/react-courser/src/components/shared/promotions.js",[],"/home/alihz/Desktop/react/react-courser/src/components/shared/comments.js",[],"/home/alihz/Desktop/react/react-courser/src/components/shared/leaders.js",[],"/home/alihz/Desktop/react/react-courser/src/components/footer/FooterComponent.js",[],"/home/alihz/Desktop/react/react-courser/src/redux/configureStore.js",[],"/home/alihz/Desktop/react/react-courser/src/redux/dishes.js",[],"/home/alihz/Desktop/react/react-courser/src/redux/comments.js",[],"/home/alihz/Desktop/react/react-courser/src/redux/promotions.js",[],"/home/alihz/Desktop/react/react-courser/src/redux/leaders.js",[],"/home/alihz/Desktop/react/react-courser/src/redux/ActionCreators.js",[],"/home/alihz/Desktop/react/react-courser/src/redux/ActionTypes.js",[],"/home/alihz/Desktop/react/react-courser/src/components/Loading/LoadingComponent.js",[],["122","123"],"/home/alihz/Desktop/react/react-courser/src/redux/forms.js",[],"/home/alihz/Desktop/react/react-courser/src/components/shared/baseURL.js",[],{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","replacedBy":"127"},{"ruleId":"124","replacedBy":"128"},{"ruleId":"126","replacedBy":"129"},{"ruleId":"130","severity":1,"message":"131","line":212,"column":19,"nodeType":"132","endLine":216,"endColumn":20},{"ruleId":"130","severity":1,"message":"133","line":230,"column":19,"nodeType":"132","endLine":241,"endColumn":21},{"ruleId":"130","severity":1,"message":"134","line":259,"column":19,"nodeType":"132","endLine":269,"endColumn":21},{"ruleId":"135","severity":1,"message":"136","line":10,"column":33,"nodeType":"137","messageId":"138","endLine":10,"endColumn":40},{"ruleId":"130","severity":1,"message":"133","line":103,"column":17,"nodeType":"132","endLine":114,"endColumn":19},{"ruleId":"130","severity":1,"message":"133","line":132,"column":17,"nodeType":"132","endLine":143,"endColumn":19},{"ruleId":"130","severity":1,"message":"133","line":161,"column":17,"nodeType":"132","endLine":173,"endColumn":19},{"ruleId":"130","severity":1,"message":"133","line":192,"column":17,"nodeType":"132","endLine":203,"endColumn":19},{"ruleId":"130","severity":1,"message":"139","line":219,"column":21,"nodeType":"132","endLine":223,"endColumn":23},{"ruleId":"130","severity":1,"message":"131","line":229,"column":17,"nodeType":"132","endLine":233,"endColumn":18},{"ruleId":"130","severity":1,"message":"134","line":244,"column":17,"nodeType":"132","endLine":253,"endColumn":19},{"ruleId":"124","replacedBy":"140"},{"ruleId":"126","replacedBy":"141"},"no-native-reassign",["142"],"no-negated-in-lhs",["143"],["142"],["143"],"react/jsx-pascal-case","Imported JSX component select must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE","no-unused-vars","'actions' is defined but never used.","Identifier","unusedVar","Imported JSX component checkbox must be in PascalCase or SCREAMING_SNAKE_CASE",["142"],["143"],"no-global-assign","no-unsafe-negation"]